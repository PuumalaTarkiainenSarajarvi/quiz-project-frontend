{"ast":null,"code":"var _jsxFileName = \"/home/puumalao/Projects/OAMK/3. Year/Cloud Integration/quiz-project/quiz-frontend/src/HighScores.js\";\nimport React, { Component } from \"react\";\nimport { Tab, Table, Tabs } from \"react-bootstrap\";\nimport './highscores.css';\nimport { email, highScore, nickName, tenBestScores } from \"./variables/Variables\";\n\nclass HighScores extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      emailHandling: false,\n      personalJson: undefined,\n      inputValue: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getHighScores();\n  }\n\n  getHighScores() {\n    let urlAddress = \"http://localhost:5000/api/get_all_high_scores\";\n    fetch(urlAddress, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    }).then(function (response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.json()).then(data => {\n      console.log(\"data\", data);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  emailJsonBody(emailString) {\n    let jsonStr = {};\n    jsonStr[email] = emailString;\n    this.apiGetPersonalBest(jsonStr);\n  }\n\n  apiGetPersonalBest(jsonStr) {\n    let urlAddress = \"http://localhost:5000/api/get_personal_bests\";\n    fetch(urlAddress, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jsonStr)\n    }).then(function (response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.json()).then(data => {\n      console.log(\"PERSONAL\", data);\n      this.setState({\n        personalJson: data\n      });\n    }).catch(error => {\n      console.log(error);\n      alert(\"User seems to not have any personal records yet.. Go play yeye ! :)\");\n    });\n  }\n\n  renderPersonalBest() {\n    if (this.state.emailHandling && this.state.personalJson) {\n      return React.createElement(\"div\", {\n        className: \"allTimeTableView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"tableHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"All time\"), React.createElement(Table, {\n        responsive: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Nick\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Score\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.renderPersonalScores())));\n    } else {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Email:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }\n  }\n\n  sortJsonScores(json) {\n    return json.sort(function (a, b) {\n      return a[highScore] - b[highScore];\n    });\n  }\n\n  renderPersonalScores() {\n    let sortedJsonData = this.sortJsonScores(this.state.personalJson[0][tenBestScores]);\n    let userNickName = this.state.personalJson[0][nickName];\n\n    if (sortedJsonData) {\n      return sortedJsonData.map((itm, i) => {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, i), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, userNickName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, itm.date), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, itm[highScore]));\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setEmailHandling().then(r => this.setState({\n      emailHandling: true\n    }));\n  }\n\n  handleChange(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n\n  renderScores() {\n    return React.createElement(\"div\", {\n      className: \"allTimeTableView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"tableHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"All time\"), React.createElement(Table, {\n      responsive: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Nick\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Score\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Erkki\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"12.02.2019\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"220\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Erkki\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"12.02.2019\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"220\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Erkki\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"12.02.2019\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"220\")))));\n  }\n\n  async setEmailHandling() {\n    await this.emailJsonBody(this.state.inputValue);\n\n    if (this.state.personalJson) {\n      this.setState({\n        emailHandling: true\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"allTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"allTime\",\n      title: \"All time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.renderScores()), React.createElement(Tab, {\n      eventKey: \"personalBest\",\n      title: \"Personal Best\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.renderPersonalBest())));\n  }\n\n}\n\nexport default HighScores;","map":{"version":3,"sources":["/home/puumalao/Projects/OAMK/3. Year/Cloud Integration/quiz-project/quiz-frontend/src/HighScores.js"],"names":["React","Component","Tab","Table","Tabs","email","highScore","nickName","tenBestScores","HighScores","constructor","props","state","isLoading","emailHandling","personalJson","undefined","inputValue","handleSubmit","bind","handleChange","componentDidMount","getHighScores","urlAddress","fetch","method","headers","Accept","then","response","ok","Error","statusText","json","data","console","log","setState","emailJsonBody","emailString","jsonStr","apiGetPersonalBest","body","JSON","stringify","catch","error","alert","renderPersonalBest","renderPersonalScores","value","sortJsonScores","sort","a","b","sortedJsonData","userNickName","map","itm","i","date","event","preventDefault","setEmailHandling","r","target","renderScores","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport {Tab, Table, Tabs} from \"react-bootstrap\";\nimport './highscores.css';\nimport {email, highScore, nickName, tenBestScores} from \"./variables/Variables\";\n\nclass HighScores extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            emailHandling: false,\n            personalJson: undefined,\n            inputValue: \"\",\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    async componentDidMount() {\n        await this.getHighScores();\n    }\n\n    getHighScores() {\n        let urlAddress = \"http://localhost:5000/api/get_all_high_scores\";\n        fetch(urlAddress, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n            }\n        })\n            .then(function (response) {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response;\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"data\",data);\n                this.setState({\n                   isLoading: false,\n                });\n            });\n    }\n\n    emailJsonBody(emailString) {\n        let jsonStr = {};\n        jsonStr[email] = emailString;\n        this.apiGetPersonalBest(jsonStr);\n    }\n\n    apiGetPersonalBest(jsonStr) {\n        let urlAddress = \"http://localhost:5000/api/get_personal_bests\";\n        fetch(urlAddress, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(jsonStr)\n        })\n            .then(function (response) {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response;\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"PERSONAL\",data);\n                this.setState({\n                    personalJson: data,\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                alert(\"User seems to not have any personal records yet.. Go play yeye ! :)\")\n            });\n    }\n\n    renderPersonalBest() {\n        if(this.state.emailHandling && this.state.personalJson) {\n            return (<div className={\"allTimeTableView\"}>\n                <p className={\"tableHeader\"}>All time</p>\n                <Table responsive=\"md\">\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Nick</th>\n                        <th>Date</th>\n                        <th>Score</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.renderPersonalScores()}\n                    </tbody>\n                </Table>\n            </div>)\n        } else {\n            return(\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Email:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            )\n        }\n    }\n\n    sortJsonScores(json) {\n        return json.sort(function(a,b) {\n           return a[highScore] - b[highScore];\n        });\n    }\n\n    renderPersonalScores() {\n        let sortedJsonData = this.sortJsonScores(this.state.personalJson[0][tenBestScores]);\n        let userNickName = this.state.personalJson[0][nickName];\n        if(sortedJsonData) {\n        return sortedJsonData.map((itm, i) => {\n            return(<tr key={i}>\n                <td>{i}</td>\n                <td>{userNickName}</td>\n                <td>{itm.date}</td>\n                <td>{itm[highScore]}</td>\n            </tr>)\n        });\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setEmailHandling().then(r => this.setState({emailHandling: true}));\n    }\n\n    handleChange(event) {\n        this.setState({inputValue: event.target.value});\n    }\n\n    renderScores() {\n        return(<div className={\"allTimeTableView\"}>\n            <p className={\"tableHeader\"}>All time</p>\n            <Table responsive=\"md\">\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Nick</th>\n                    <th>Date</th>\n                    <th>Score</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td>1</td>\n                    <td>Erkki</td>\n                    <td>12.02.2019</td>\n                    <td>220</td>\n                </tr>\n                <tr>\n                    <td>2</td>\n                    <td>Erkki</td>\n                    <td>12.02.2019</td>\n                    <td>220</td>\n                </tr>\n                <tr>\n                    <td>3</td>\n                    <td>Erkki</td>\n                    <td>12.02.2019</td>\n                    <td>220</td>\n                </tr>\n                </tbody>\n            </Table>\n        </div>)\n    }\n\n    async setEmailHandling() {\n        await this.emailJsonBody(this.state.inputValue);\n        if(this.state.personalJson) {\n        this.setState({\n            emailHandling: true,\n        });\n        }\n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return (\n                <div>\n                    <h1>Loading...</h1>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <Tabs defaultActiveKey=\"allTime\">\n                    <Tab eventKey=\"allTime\" title=\"All time\">\n                        {this.renderScores()}\n                    </Tab>\n                    <Tab eventKey=\"personalBest\" title=\"Personal Best\">\n                        {this.renderPersonalBest()}\n                    </Tab>\n                </Tabs>\n\n\n            </div>\n        )\n    }\n}\n\nexport default HighScores\n"]},"metadata":{},"sourceType":"module"}