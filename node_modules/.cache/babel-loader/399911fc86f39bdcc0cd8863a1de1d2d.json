{"ast":null,"code":"var _jsxFileName = \"/home/puumalao/Projects/OAMK/3. Year/Cloud Integration/quiz-project/quiz-frontend/src/ClockForGame.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport './quizgame.css';\n\nclass ClockForGame extends Component {\n  constructor(props) {\n    super(props);\n    this.maximumTime = 60;\n    this.state = {\n      currentCount: 60,\n      percentageCount: 100\n    };\n  }\n\n  countPercentage(count) {\n    count = count / this.maximumTime * 100;\n    return count;\n  }\n\n  timer() {\n    let currentCount = this.state.currentCount;\n    currentCount = currentCount - 1;\n    this.setState({\n      currentCount: currentCount,\n      percentageCount: this.countPercentage(currentCount)\n    });\n\n    if (this.state.currentCount < 1) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(this.timer.bind(this), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  timerDiv() {\n    if (this.state.currentCount > 0) {} else {\n      return React.createElement(Redirect, {\n        to: '/',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"progressBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.timerDiv(), React.createElement(\"div\", {\n      className: \"filler\",\n      style: {\n        width: \"\".concat(this.state.percentageCount, \"%\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ClockForGame;","map":{"version":3,"sources":["/home/puumalao/Projects/OAMK/3. Year/Cloud Integration/quiz-project/quiz-frontend/src/ClockForGame.js"],"names":["React","Component","Redirect","ClockForGame","constructor","props","maximumTime","state","currentCount","percentageCount","countPercentage","count","timer","setState","clearInterval","intervalId","componentDidMount","setInterval","bind","componentWillUnmount","timerDiv","render","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,gBAAP;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAEjCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SADlBC,WACkB,GADJ,EACI;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,eAAe,EAAE;AAFR,KAAb;AAIH;;AACDC,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACnBA,IAAAA,KAAK,GAAKA,KAAK,GAAG,KAAKL,WAAd,GAA6B,GAAtC;AACA,WAAOK,KAAP;AACH;;AACDC,EAAAA,KAAK,GAAG;AACJ,QAAIJ,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAA9B;AACAA,IAAAA,YAAY,GAAGA,YAAY,GAAG,CAA9B;AACA,SAAKK,QAAL,CAAc;AACVL,MAAAA,YAAY,EAAEA,YADJ;AAEVC,MAAAA,eAAe,EAAE,KAAKC,eAAL,CAAqBF,YAArB;AAFP,KAAd;;AAIA,QAAG,KAAKD,KAAL,CAAWC,YAAX,GAA0B,CAA7B,EAAgC;AAC5BM,MAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACH;AACJ;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,UAAL,GAAkBE,WAAW,CAAC,KAAKL,KAAL,CAAWM,IAAX,CAAgB,IAAhB,CAAD,EAAwB,IAAxB,CAA7B;AACH;;AACDC,EAAAA,oBAAoB,GAAE;AAClBL,IAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACH;;AAEDK,EAAAA,QAAQ,GAAG;AACP,QAAG,KAAKb,KAAL,CAAWC,YAAX,GAA0B,CAA7B,EAAgC,CAE/B,CAFD,MAEO;AACH,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,QAAL,EADL,EAEI;AAAK,MAAA,SAAS,EAAE,QAAhB;AAA0B,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,YAAK,KAAKf,KAAL,CAAWE,eAAhB;AAAP,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA9CgC;;AAiDrC,eAAeN,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport './quizgame.css';\n\nclass ClockForGame extends Component {\n    maximumTime = 60;\n    constructor(props){\n        super(props);\n        this.state = {\n            currentCount: 60,\n            percentageCount: 100\n        }\n    }\n    countPercentage(count) {\n        count = ((count / this.maximumTime) * 100);\n        return count;\n    }\n    timer() {\n        let currentCount = this.state.currentCount;\n        currentCount = currentCount - 1;\n        this.setState({\n            currentCount: currentCount,\n            percentageCount: this.countPercentage(currentCount)\n        });\n        if(this.state.currentCount < 1) {\n            clearInterval(this.intervalId);\n        }\n    }\n    componentDidMount() {\n        this.intervalId = setInterval(this.timer.bind(this), 1000);\n    }\n    componentWillUnmount(){\n        clearInterval(this.intervalId);\n    }\n\n    timerDiv() {\n        if(this.state.currentCount > 0) {\n\n        } else {\n            return <Redirect to={'/'}/>\n        }\n    }\n\n    render() {\n        return(\n            <div className={\"progressBar\"}>\n                {this.timerDiv()}\n                <div className={\"filler\"} style={{ width: `${this.state.percentageCount}%`}} />\n            </div>\n            );\n    }\n}\n\nexport default ClockForGame;\n"]},"metadata":{},"sourceType":"module"}